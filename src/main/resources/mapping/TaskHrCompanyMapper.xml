<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microdev.mapper.TaskHrCompanyMapper">
    <sql id="TaskHrCompany_Query_List">
        id as pid, create_time, deleted, modify_time,
        hourly_pay, confirmed_workers, have_pay_money, minutes, need_workers, refused_workers, repast_times, should_pay_money, status, workers_have_pay, workers_should_pay,
        hr_company_id, task_id, hotel_id, hr_company_name, hotel_name, task_type_code, task_type_text, task_content, refused_reason,from_date,to_date,day_start_time,day_end_time,hourly_pay_hotel,
        distribute_workers
    </sql>
    <insert id="save" parameterType="com.microdev.model.TaskHrCompany">
        insert into task_hr_company values(#{pid},#{createTime},#{deleted},#{modifyTime},
        #{hourlyPay},#{confirmedWorkers},#{havePayMoney},#{minutes},#{needWorkers},#{refusedWorkers},
        #{repastTimes},#{shouldPayMoney},#{status},#{workersHavePay},#{workersShouldPay},#{hrCompanyId},
        #{taskId},#{hotelId},#{hrCompanyName},#{hotelName},#{taskTypeCode},#{taskTypeText},#{taskContent}
        ,#{refusedReason})
    </insert>
    <select id="queryByHotelTaskId" resultType="com.microdev.model.TaskHrCompany">
        select
        <include refid="TaskHrCompany_Query_List"/>
        from task_hr_company where task_id = #{id}
    </select>
    <select id="queryByTaskId" resultType="com.microdev.model.TaskHrCompany">
        select
        <include refid="TaskHrCompany_Query_List"/>
        from task_hr_company where id = #{id}
    </select>
    <update id="update" parameterType="com.microdev.model.TaskHrCompany">
        update task_hr_company set deleted = #{createTime},modify_time = #{modifyTime},hourly_pay = #{hourlyPay},confirmed_workers = #{confirmedWorkers},
        have_pay_money = #{havePayMoney},minutes = #{minutes},need_workers = #{needWorkers},refused_workers = #{refusedWorkers},repast_times = #{repastTimes},
        should_pay_money = #{shouldPayMoney},status = #{status},workers_have_pay = #{workersHavePay},workers_should_pay = #{workersShouldPay},hr_company_id = #{hrCompanyId},
        task_id = #{taskId},hotel_id = #{hotelId},hr_company_name = #{hrCompanyName},hotel_name = #{hotelName},task_type_code = #{taskTypeCode},task_type_text = #{taskTypeText},
        task_content = #{taskContent},refused_reason = #{refusedReason}
        where id = #{pid}
    </update>
    <select id="queryHrCompanyTasks" parameterType="com.microdev.param.TaskHrQueryDTO"
            resultType="com.microdev.model.TaskHrCompany">
        select
        t.id as pid, t.create_time, t.deleted, t.modify_time,
        t.hourly_pay, t.confirmed_workers, t.have_pay_money, t.minutes, t.need_workers, t.refused_workers, t.repast_times, t.should_pay_money, t.status, t.workers_have_pay, t.workers_should_pay,
        t.should_pay_money - t.have_pay_money as  paidPayMoney,t.workers_should_pay - t.workers_have_pay as workersPaidPay,t.hr_company_id, t.task_id, t.hotel_id, t.hr_company_name, t.hotel_name, t.task_type_code, t.task_type_text, t.task_content, t.refused_reason,t.from_date,t.to_date,t.day_start_time,t.day_end_time,t.hourly_pay_hotel,
        t.distribute_workers
        from task_hr_company t left join company c on t.hotel_id = c.id
        <where>
            <if test="hrCompanyId != null and hrCompanyId != ''">
                and t.hr_company_id = #{hrCompanyId}
            </if>
			<if test="taskId != null and taskId != ''">
                and t.task_id = #{taskId}
            </if>
            <if test="taskTypeCode != null and taskTypeCode != ''">
                and t.task_type_code = #{taskTypeCode}
            </if>
            <if test="hotelId != null and hotelId != ''">
                and t.hotel_id = #{hotelId}
            </if>
            <if test="taskTypeText != null and taskTypeText != ''">
                and t.task_type_text like '%${taskTypeText}%'
            </if>
            <if test="fromDate != null">
                and t.to_date &gt;= #{fromDate,jdbcType=TIMESTAMP}
            </if>
            <if test="payUp != null">
                and t.hourly_pay &lt;= #{payUp}
            </if>
            <if test="payDown != null">
                and t.hourly_pay >= #{payDown}
            </if>
            <if test="toDate != null">
                and t.from_date &lt;= #{toDate,jdbcType=TIMESTAMP}
            </if>

            <if test="hotelName != null and hotelName != ''">
                and c.name like '%${hotelName}%'
            </if>
            <if test="payStatus == 1">
                and t.have_pay_money = 0
            </if>
            <if test="payStatus == 2">
                and t.have_pay_money &gt;= 0 and t.should_pay_money != t.have_pay_money
            </if>
            <if test="payStatus == 3">
                and t.have_pay_money &gt;= 0 and t.should_pay_money = t.have_pay_money
            </if>
            <if test="status !=null and status !=0  and status !=6 and status !=7 and status !=8 and status !=9">
                and t.status = #{status}
            </if>
            <if test="status == 0">
                and t.status in (1,2,4,5) and t.to_date &gt; now()
            </if>
            <if test="status == 9">
                and ((t.status = 5 and t.to_date &gt; now()) or t.status = 3)
            </if>
            <if test="status == 6">
                and t.status = 5 and t.and to_date &gt; now() and t.from_date &lt; now()
            </if>
            <if test="status == 8">
                and t.status in (4,5) and t.to_date &gt; now()
            </if>
            <if test="status == 7">
                and t.status in(4,5) and t.to_date &lt; now()
            </if>
        </where>
        order by t.create_time desc
    </select>
    <select id="queryHotelBill" resultType="com.microdev.model.TaskHrCompany" parameterType="com.microdev.param.BillRequest">
        select  sum(t.should_pay_money) as should_pay_money,sum(t.have_pay_money) as have_pay_money, sum(t.minutes) as minutes,
        sum(t.should_pay_money) - sum(t.have_pay_money) as paidPayMoney,t.hr_company_id as hrCompanyId,c.name as hrCompanyName from task_hr_company t left join company c on t.hr_company_id = c.id
        where t.hotel_id = #{id}
        <if test = "name != null and name != ''">
            and c.name like concat('%', #{name},'%')
        </if>
        group by c.id,c.name
    </select>
    <select id="queryHrCompanyBill" resultType="com.microdev.model.TaskHrCompany" parameterType="com.microdev.param.BillRequest">
        select  sum(t.should_pay_money) as should_pay_money,sum(t.have_pay_money) as have_pay_money, sum(t.minutes) as minutes,
        t.hotel_id as hotelId,c.name as hotelName ,sum(t.should_pay_money) - sum(t.have_pay_money) as paidPayMoney
        from task_hr_company t left join company c on t.hotel_id = c.id
        where t.hr_company_id = #{id}
        <if test = "name != null and name != ''">
            and c.name like concat('%', #{name},'%')
        </if>
        group by t.hotel_id,c.name
    </select>
    <select id="selectPayHrInfo" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT hr_company_name AS companyName, IFNULL(`should_pay_money`,0.0) AS shouldPayMoney, IFNULL(have_pay_money,0.0) AS havePayMoney,
        IFNULL(should_pay_money - have_pay_money,0.0) AS waitPayMoney, hr_company_id as hrCompanyId
        FROM task_hr_company
        WHERE hotel_id = #{hotelId}
    </select>
    <update id="addMinutes">
        UPDATE task_hr_company SET minutes = minutes + #{minutes},workers_should_pay = workers_should_pay + #{hrShouldPayMoney},
        should_pay_money = should_pay_money + #{hotelShouldPayMoney} Where id = #{taskHrCompanyId}
    </update>
    <update id="updateStatus">
        update task_hr_company set status = #{status} where id = #{id}
    </update>
    <select id="selectByTaskId" parameterType="java.lang.String" resultType="com.microdev.param.HrTaskDetails">
        SELECT th.hourly_pay_hotel AS hourlyPayHotel,t.hotel_id AS hotelId,t.hotel_name AS
        hotelName,c.leader_mobile as leaderMobile,c.leader as leader,t.id AS hotelTaskId,t.task_type_text AS taskTypeText,DATE_FORMAT(t.day_start_time,'%H:%i') as dayStartTime,DATE_FORMAT(t.day_end_time,'%H:%i') as dayEndTime,
        t.task_content AS taskContent, t.from_date AS fromDate, t.to_date AS toDate
        , c.`address` AS hotelAddress,IFNULL(t.`hourly_pay`, 0.0) AS hotelHourlyPay,th.distribute_workers as distributeWorkers,
        th.hr_company_id AS hrCompanyId, th.hr_company_name AS hrCompanyName, th.id AS pid,IFNULL(th.`hourly_pay`,0.0) AS hourlyPay,
        th.need_workers AS needWorkers, th.confirmed_workers AS confirmedWorkers, th.`refused_workers` AS refusedWorkers,
        th.`status` AS status, th.`repast_times` AS repastTimes, th.`minutes` AS minutes, th.`should_pay_money` AS shouldPayMoney,
        IFNULL(th.`have_pay_money`,0.0) AS havePayMoney, (IFNULL(th.`should_pay_money`,0.0) - IFNULL(th.have_pay_money,0.0)) AS waitPayMoney,
        IFNULL(th.`workers_have_pay`,0.0) AS workersHavePay,
        IFNULL(th.`workers_should_pay`,0.0) AS workersShouldPay, (IFNULL(th.workers_should_pay,0.0) - IFNULL(th.workers_have_pay,0.0)) AS workersWaitPay,c.area
        FROM task t
        INNER JOIN task_hr_company th
        ON t.id = th.task_id
        INNER JOIN company c
        ON t.hotel_id = c.id
        WHERE th.id = #{hrCompanyId}
    </select>

        <select id="queryHrCurTaskCount" parameterType="com.microdev.param.TaskHrQueryDTO"
                resultType="java.lang.Integer">
            select count(1)
            from task_hr_company where hr_company_id = #{hrCompanyId} and status in (4,5) and to_date &gt; now()
        </select>
</mapper>