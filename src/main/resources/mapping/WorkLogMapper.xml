<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microdev.mapper.WorkerLogMapper" >
    <sql id="WorkLog_Column_List" >
        id as pid, create_time, deleted, modify_time,
        from_date, minutes, punch_date, repast_times, task_worker_id,
        to_date, task_id,status
    </sql>
    <resultMap type="com.microdev.param.PunchDTO" id="countPunchMap">
        <result column="startTime" jdbcType="TIMESTAMP" property="startTime" />
        <result column="endTime" jdbcType="TIMESTAMP" property="endTime" />
        <association property="log" javaType="com.microdev.model.WorkLog">
            <id column="id" jdbcType="VARCHAR" property="pid" />
            <result column="fromDate" jdbcType="TIMESTAMP" property="fromDate" />
            <result column="toDate" jdbcType="TIMESTAMP" property="toDate" />
			<result column="taskWorkerId" jdbcType="VARCHAR" property="taskWorkerId" />
        </association>
    </resultMap>
    <select id="findFirstByTaskWorkerId" parameterType="java.lang.String" resultType="com.microdev.model.WorkLog">
        SELECT <include refid="WorkLog_Column_List"/> FROM work_log WHERE task_worker_id = #{taskWorkerId} and deleted = FALSE
        order by punch_date desc limit 1
    </select>
    <select id="findByTaskWorkId" parameterType="java.lang.String" resultType="com.microdev.model.WorkLog">
        SELECT <include refid="WorkLog_Column_List"/> FROM work_log WHERE task_worker_id = #{taskWorkerId} and deleted = FALSE
        order by punch_date desc
    </select>

    <update id="updateByMapId" parameterType="java.util.Map">
        update work_log
        <set>
            <if test="modifyTime != null">
                modify_time = #{modifyTime},
            </if>
            <if test="fromDate != null">
                from_date = #{fromDate},
            </if>
            <if test="toDate != null">
                to_date = #{toDate}
            </if>
            <if test="punchDate != null">
                punch_date = #{punchDate}
            </if>
            <if test="minutes != null">
                minutes = #{minutes}
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="countPunchInfoNumber" resultType="java.lang.Integer">
        select count(1)
		FROM task_worker tw
		INNER JOIN work_log wl
		ON wl.`task_worker_id` = tw.`id`
		WHERE DATE_SUB(CURDATE(),INTERVAL 1 DAY) = DATE(wl.create_time) and
		wl.deleted = FALSE
    </select>
    <select id="countPunchInfo" resultMap="countPunchMap" parameterType="java.util.Map">
        SELECT tw.`day_start_time` AS startTime,
		tw.`day_end_time` AS endTime,
		GROUP_CONCAT(wl.id) AS id,wl.task_worker_id as
		taskWorkerId,
		group_concat(wl.`from_date`) AS fromDate,
		group_concat(wl.`to_date`) AS toDate
		FROM task_worker tw
		INNER JOIN work_log wl
		ON wl.`task_worker_id` = tw.`id`
		WHERE wl.deleted = FALSE and
		DATE_FORMAT(DATE_SUB(CURDATE(),INTERVAL 1 DAY),'%y-%m-%d') = DATE_FORMAT(DATE(wl.create_time),'%y-%m-%d')
		GROUP BY wl.task_worker_id
		LIMIT #{start}, #{end}
    </select>
    <update id="updateBatch" parameterType="java.util.List">
        update work_log
        set status =
        <foreach collection="list" item="item" open="case id " close="end"
                 separator=" ">
            when #{item.id} then #{item.status}
        </foreach>
        where id in
        <foreach collection="list" item="item" open="(" separator=","
                 close=")">
            #{item.pid}
        </foreach>
    </update>

    <select id="selectWorkLogByTime" parameterType="java.util.Map"
            resultType="com.microdev.model.WorkLog">
		SELECT *
		FROM work_log WHERE task_worker_id = #{taskWorkerId}
		AND DATE_FORMAT(create_time, '%Y-%m-%d') =
		DATE_FORMAT(#{time},'%Y-%m-%d')
		and deleted = FALSE
	</select>

    <select id="selectNoPunchByWorkerId" parameterType="java.lang.String"
            resultType="com.microdev.param.SupplementResponse">
        SELECT th.hotel_name AS
		hotelName,DATE_FORMAT(tw.from_date,'%Y.%m.%d')
		AS
		workFromDate,DATE_FORMAT(tw.to_date,'%Y.%m.%d') AS workToDate,
		DATE_FORMAT(tw.day_start_time,'%h:%m') AS dayStartTime,
		DATE_FORMAT(tw.day_end_time,'%h:%m') AS dayEndTime,th.task_type_text
		AS taskTypeText,GROUP_CONCAT(DATE_FORMAT(wl.`from_date`,'%h:%m')) AS fromDate,
		GROUP_CONCAT(DATE_FORMAT(wl.`to_date`,'%h:%m')) AS toDate,wl.id AS workLogId,
		th.`hotel_id` AS hotelId,
		DATE_FORMAT(wl.`create_time`,'%Y/%m/%d') AS current
		FROM (SELECT * FROM work_log WHERE to_date IS NULL) wl
		INNER JOIN
		(
		SELECT *
		FROM task_worker
		WHERE
		worker_id =
		#{workerId}
		AND DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[<=]]>
		modify_time
		) tw
		ON wl.`task_worker_id` = tw.id
		INNER JOIN
		task_hr_company th
		ON th.id = tw.task_hr_id
		GROUP BY DATE_FORMAT(wl.create_time,'%Y.%m.%d')
		ORDER BY wl.create_time DESC
    </select>
    <select id="selectNoPunchDetail" parameterType="java.util.Map"
            resultType="com.microdev.param.SupplementResponse">
        SELECT DATE_FORMAT(tw.from_date,'%Y.%m.%d') AS
		workFromDate,DATE_FORMAT(tw.to_date,'%Y.%m.%d') AS workToDate,
		DATE_FORMAT(tw.day_start_time,'%h:%m') AS
		dayStartTime,DATE_FORMAT(wl.`from_date`,'%h:%m') AS fromDate,
		DATE_FORMAT(wl.`to_date`,'%h:%m') AS
		toDate,DATE_FORMAT(wl.`create_time`,'%Y/%m/%d') AS current,
		DATE_FORMAT(tw.day_end_time,'%h:%m') AS dayEndTime,tw.hourly_pay AS
		hourlyPay, th.task_type_text AS taskTypeText, th.`task_content` AS
		taskContent,
		c.name AS hotelName, c.address AS address,c.leader AS
		leader,c.leader_mobile AS
		leaderMobile,th.`hotel_id` AS hotelId,tw.id
		AS taskWorkerId
		FROM
		(SELECT * FROM work_log WHERE id = #{workLogId}) wl
		INNER JOIN task_worker tw
		ON wl.`task_worker_id` = tw.id
		INNER JOIN
		task_hr_company th
		ON th.`id` = tw.task_hr_id
		INNER JOIN
		(SELECT * FROM
		company WHERE id = #{companyId}) c
		ON c.id = th.`hotel_id`
    </select>
    <select id="selectUserPunchDetail" parameterType="java.lang.String"
            resultType="com.microdev.model.WorkLog">
		SELECT from_date,to_date, SUM(IFNULL(STATUS,0)) AS status,id
		FROM work_log WHERE task_worker_id = #{taskWorkerId}
		GROUP BY DATE_FORMAT(create_time, '%y-%m-%d') order by create_time asc
	</select>
</mapper>