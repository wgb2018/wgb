<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microdev.mapper.TaskMapper">
    <sql id="Task_Query_Param">
        id as pid, create_time, deleted, modify_time,
        confirmed_workers, from_date, have_pay_money, hourly_pay, minutes, need_workers, refused_workers, repast_times, should_pay_money,
        status, task_content, task_type_code, task_type_text, to_date, hotel_id, day_start_time, day_end_time, hotel_name,check_sign
    </sql>
    <resultMap type="com.microdev.param.TaskViewDTO" id="dotMap">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="minutes" jdbcType="INTEGER" property="minutes"/>
        <result column="confirmedWorkers" jdbcType="INTEGER" property="confirmedWorkers"/>
        <result column="toDate" jdbcType="TIMESTAMP" property="toDate"/>
        <result column="havePayMoney" jdbcType="DOUBLE" property="havePayMoney"/>
        <result column="shouldPayMoney" jdbcType="DOUBLE" property="shouldPayMoney"/>
        <result column="repastTimes" jdbcType="INTEGER" property="repastTimes"/>
        <result column="refusedWorkers" jdbcType="INTEGER" property="refusedWorkers"/>
        <result column="hourlyPay" jdbcType="DOUBLE" property="hourlyPay"/>
        <result column="hotelName" jdbcType="VARCHAR" property="hotelName"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="taskTypeText" jdbcType="VARCHAR" property="taskTypeText"/>
        <result column="taskContent" jdbcType="VARCHAR" property="taskContent"/>
        <result column="fromDate" jdbcType="TIMESTAMP" property="fromDate"/>
        <result column="needWorkers" jdbcType="INTEGER" property="needWorkers"/>
        <collection property="listTaskHr" column="id"
                    ofType="com.microdev.param.TaskHrCompanyViewDTO" select="selectTaskHrCompany"
                    javaType="java.util.List"/>

    </resultMap>
    <insert id="save" parameterType="com.microdev.model.Task">
        insert into task values (#{pid},#{create_time},#{deleted},#{modify_time},#{confirmed_workers},#{from_date},
        #{have_pay_money},#{hourly_pay},#{minutes},#{need_workers},#{refused_workers},#{repast_times},#{should_pay_money},#{status},
        #{task_content},#{task_type_code},#{task_type_text},#{to_date},#{hotel_id},#{day_start_time},#{day_end_time},#{hotel_name}, #{checkSign})
    </insert>
    <select id="getFirstById" resultType="com.microdev.model.Task">
        select
        <include refid="Task_Query_Param"/>
        from task where id = #{id}
    </select>
    <select id="queryTasks" parameterType="com.microdev.param.TaskQueryDTO" resultType="com.microdev.model.Task">
        select
        <include refid="Task_Query_Param"/>
        from task
        <where>
            <if test="taskTypeText != null and taskTypeText != ''">
                task_type_text = #{taskTypeText}
            </if>
            <if test="hotelId != null and hotelId != ''">
                and hotel_id = #{hotelId}
            </if>
            <if test="startTime != null">
                and to_date &gt;= #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime != null">
                and from_date &lt;= #{endTime,jdbcType=TIMESTAMP}
            </if>

            <if test="hotelName != null and hotelName != ''">
                and hotel_name like '%${hotelName}%'
            </if>
            <if test="payUp != null">
                and hourly_pay &lt;= #{payUp}
            </if>
            <if test="payDown != null">
                and hourly_pay &gt;= #{payDown}
            </if>
            <if test="payStatus == 1">
                and have_pay_money = 0
            </if>
            <if test="payStatus == 2">
                and have_pay_money &gt;= 0 and should_pay_money != have_pay_money
            </if>
            <if test="payStatus == 3">
                and have_pay_money &gt;= 0 and should_pay_money = have_pay_money
            </if>
            <if test="status == 0">
                and to_date &gt; now()
            </if>
            <if test="status == 1 || status == 2 || status == 3 || status == 8">
                and to_date &gt; now() and status = #{status}
            </if>
            <if test="status == 4">
                and from_date &gt; now() and status = 4
            </if>
            <if test="status == 5">
                and status = 4 and now() between from_date and to_date
            </if>
            <if test="status == 6">
                and to_date &lt;= now()
            </if>
            <if test="status == 7">
                and to_date &gt; now() and status != 8
            </if>
        </where>
        order by create_time desc
    </select>
    <select id="selectHrAndTaskHourPay" parameterType="java.lang.String"
            resultType="java.util.Map">
        SELECT IFNULL(t.hourly_pay, 0) AS taskPay , IFNULL(tc.hourly_pay, 0) as hrPay
        FROM task t
        INNER JOIN task_hr_company tc
        ON t.id = tc.task_id AND t.id = #{taskId}
    </select>
    <select id="selectPayMoneyInfo" parameterType="java.lang.String"
            resultType="java.util.Map">
        SELECT SUM(IFNULL(should_pay_money,0)) AS shouldPayMoney,
        SUM(IFNULL(have_pay_money,0)) AS havePayMoney,
        SUM(IFNULL(should_pay_money,0)) - SUM(IFNULL(have_pay_money,0)) AS
        waitPayMoney
        FROM task where hotel_id = #{hotelId}
    </select>
    <update id="update" parameterType="com.microdev.model.Task">
        update task set deleted = #{task.deleted},modify_time = #{task.modify_time},confirmed_workers = #{task.confirmed_workers},from_date = #{task.from_date},
        have_pay_money = #{task.have_pay_money},hourly_pay = #{task.hourly_pay},minutes = #{task.minutes},need_workers = #{task.need_workers},refused_workers =#{task.refused_workers},
        repast_times = #{task.repast_times},should_pay_money = #{task.should_pay_money},status = #{task.status},task_content = #{task.task_content},task_type_code = #{task.task_type_code},
        task_type_text = #{task.task_type_text},to_date = #{task.to_date},hotel_id = #{task.hotel_id},day_start_time = #{task.day_start_time},day_end_time = #{task.day_end_time},
        hotel_name = #{task.hotel_name} where id = #{task.id}
    </update>
    <update id="addMinutes">
        UPDATE task SET minutes = minutes + #{minutes}, should_pay_money = should_pay_money + #{shouldPayMoney} Where id = #{taskId}
    </update>
    <update id="updateStatus">
        update task set status = #{status} where id = #{taskId}
    </update>
    <select id="selectHotelWaitDetails" parameterType="java.util.Map"
            resultType="java.util.Map">
        select t.task_type_text as taskTypeText,t.hourly_pay as
        hourlyPay,t.from_date as fromDate,
        t.to_date as toDate, t.day_start_time as dayStartTime, t.day_end_time as
        dayEndTime,t.id as id,
        t.need_workers as needWorkers, t.confirmed_workers confirmedWorkers,m.message_code
        as messageCode,
        m.id as messageId
        from
        (select * from task where hotel_id=#{hotelId}) t
        inner join
        (select * from message where apply_type=3 and status = #{status} and deleted= #{deleted}) m
        on t.hotel_id = m.`hotel_id`
    </select>
    <select id="findTaskAndHrInfoById" parameterType="java.lang.String"
            resultMap="dotMap">
        SELECT t.id AS pid, t.task_type_text AS taskTypeText,t.`task_content` AS
        taskContent,t.`from_date` AS fromDate, t.`to_date` AS toDate,t.status,
        t.`hourly_pay` AS hourlyPay,t.`need_workers` AS
        needWorkers,t.`hotel_name` AS HotelName,t.`confirmed_workers` AS
        confirmedWorkers,
        t.`refused_workers` AS refusedWorkers,t.`repast_times` AS repastTimes,t.`minutes` AS
        minutes,IFNULL(t.`should_pay_money`,0) AS shouldPayMoney,
        IFNULL(t.`have_pay_money`,0) AS
        havePayMoney,IFNULL(t.`should_pay_money` - t.`have_pay_money`,0) AS
        waitPayMoney
        FROM task t WHERE t.id = #{id}
    </select>
    <select id="selectTaskHrCompany" parameterType="java.lang.String"
            resultType="com.microdev.param.TaskHrCompanyViewDTO">
        SELECT tc.id AS taskHrId,tc.need_workers AS needWorkers,tc.confirmed_workers
        AS confirmedWorkers,tc.refused_workers AS refusedWorkers,
        tc.repast_times AS repastTimes, tc.minutes AS
        minutes,IFNULL(tc.should_pay_money,0) AS shouldPayMoney
        ,IFNULL(tc.`have_pay_money`,0) AS havePayMoney,
        IFNULL(tc.should_pay_money - tc.`have_pay_money`,0) AS
        waitPayMoney,tc.hr_company_name AS hrCompanyName, tc.hr_company_id AS
        hrCompanyId
        FROM task_hr_company tc
        WHERE tc.task_id = #{taskId}
    </select>

    <select id="selectUnReadCount" parameterType="java.lang.String" resultType="java.lang.Integer">
         select count(1) from task where hotel_id = #{hotelId} and check_sign = 0
    </select>

    <select id="selectCompleteCount" parameterType="java.lang.String" resultType="java.lang.Integer">
      SELECT COUNT(1) FROM task
      WHERE hotel_id = #{hotelId} AND CURDATE() > to_date and check_sign <![CDATA[<>]]> 3
    </select>

</mapper>