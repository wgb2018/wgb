<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microdev.mapper.DictMapper">
    <!--<cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"/>-->
    <sql id="Dict_Column_List">
        id as pid, create_time, deleted, modify_time, code,
        extend, name, ordinal, remark, text
    </sql>
    <insert id="save" parameterType="com.microdev.model.Dict">
        insert into dict values(#{id},#{createTime},#{deleted},#{modifyTime},#{code},
        #{extend},#{name},#{ordinal},#{remark},#{text})
    </insert>
    <update id="delete" parameterType="com.microdev.model.Dict">
        update dict set delete = 1 where id = #{id}
    </update>
    <update id="update" parameterType="com.microdev.model.Dict">
        update dict set modify_time = #{modifyTime},code = #{code},extend = #{extend},
        name = #{name},ordinal = #{ordinal},remark = #{remark},text = #{text}
        where id = #{id}
    </update>
    <select id="findByNameAndCode" resultType="com.microdev.param.DictDTO">
        SELECT id as pid,name,code,text,ordinal,remark,extend
        FROM dict WHERE name = #{name} and code = #{code}
    </select>
    <select id="findOne" resultType="com.microdev.model.Dict" parameterType="java.lang.String">
        select
        <include refid="Dict_Column_List"/>
        from dict where id = #{id} and deleted = 0;
    </select>
    <select id="findByName" resultType="com.microdev.model.Dict" parameterType="java.lang.String">
        select
        <include refid="Dict_Column_List"/>
        from dict where name = #{name}
    </select>
    <select id="findAll" resultType="com.microdev.model.Dict">
        select
        <include refid="Dict_Column_List"/>
        from dict
    </select>
    <select id="queryDicts" resultType="com.microdev.model.Dict" parameterType="com.microdev.param.DictDTO">
        select
        <include refid="Dict_Column_List"/>
        from dict
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="text != null and text != ''">
                and text like '%${text}%'
            </if>
            <if test="remark != null and remark != ''">
                and remark like '%${remark}%'
            </if>
            <if test="extend != null and extend != ''">
                and extend like '%${extend}%'
            </if>
        </where>
    </select>
    <select id="findProvince" resultType="java.util.Map">
        select provinceID as provinceId,province as
        province from province
    </select>
    <select id="findCity" resultType="java.util.Map" parameterType="java.lang.String">
        select cityID as cityId,city as
        city from city where father = #{pid}
    </select>
    <select id="findArea" resultType="java.util.Map" parameterType="java.lang.String">
        select areaID as areaId,area as
        area from area where father = #{cid}
    </select>

    <select id="selectTypeByUserId" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT d.remark  FROM task_type_relation tr
        INNER JOIN dict d ON tr.`task_type_id` = d.`id`
        WHERE tr.`id` = #{id}
    </select>
    <select id="queryTypeByUserId" parameterType="com.microdev.model.Dict" resultType="com.microdev.model.Dict">
        SELECT d.id as pid, d.create_time, d.deleted, d.modify_time, d.code,
        d.extend, d.name, d.ordinal, d.remark, d.text  FROM task_type_relation tr
        INNER JOIN dict d ON tr.`task_type_id` = d.`id`
        WHERE tr.`id` = #{id}
    </select>
    <select id="findServiceArea" resultType="com.microdev.model.UserArea" parameterType="java.lang.String">
        select area_id as areaId,area_name as areaName,area_level as areaLevel from user_area where id = #{id}
    </select>
    <select id="findSeriveAreaThird" resultType="com.microdev.model.UserArea" parameterType="java.lang.String">
        select cityID as areaId,city as areaName from city where cityID = (select father from area where areaID = #{id})
    </select>
    <select id="findSeriveAreaSecond" resultType="com.microdev.model.UserArea" parameterType="java.lang.String">
        select provinceID as areaId,province as areaName from province where provinceID = (select father from city where cityID = #{id})
    </select>
    <select id="findSeriveAreaFirst" resultType="com.microdev.model.UserArea" parameterType="java.lang.String">
        select provinceID as areaId,province as areaName from province where provinceID = #{id}
    </select>
    <select id="findProvinceNameById" resultType="java.lang.String" parameterType="java.lang.String">
        select province from province where provinceID = #{id}
    </select>
    <select id="findCityNameById" resultType="java.lang.String" parameterType="java.lang.String">
        select city from city where cityID = #{id}
    </select>
    <select id="findAreaNameById" resultType="java.lang.String" parameterType="java.lang.String">
        select area from area where areaID = #{id}
    </select>
</mapper>