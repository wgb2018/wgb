<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microdev.mapper.MessageMapper">
    <sql id="Message_Column_List">
        id as pid, create_time, deleted, modify_time,message_type,
        message_code, message_content, message_link, message_title, msg_link, status, worker_id, worker_task_id, hotel_id,
        hr_company_id, applicant_type, apply_type, content, minutes, supplement_time_end, supplement_time, request_id,check_sign, is_task,task_id
    </sql>

    <update id="updateByMapId" parameterType="java.util.Map">
        update message
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="messageCode != null">
                message_code = #{messageCode,jdbcType=VARCHAR},
            </if>
            <if test="messageContent != null">
                message_content = #{messageContent,jdbcType=VARCHAR},
            </if>
            <if test="messageLink != null">
                message_link = #{messageLink,jdbcType=VARCHAR},
            </if>
            <if test="messageTitle != null">
                message_title = #{messageTitle,jdbcType=VARCHAR},
            </if>
            <if test="msgLink != null">
                msg_link = #{msgLink,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="workerId != null">
                worker_id = #{workerId,jdbcType=VARCHAR},
            </if>
            <if test="workerTaskId != null">
                worker_task_id = #{workerTaskId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{pid,jdbcType=VARCHAR}
    </update>

    <update id="updateStatus" parameterType="java.lang.String">
        update message set status = 1 where id = #{id}
    </update>
    <select id="findAll" parameterType="com.microdev.param.MessageQuery" resultType="com.microdev.model.Message">
        select
        <include refid="Message_Column_List"/>
        from message
        <where>
            <if test="workerId !=null and workerId != ''">
                worker_id = #{workerId}
            </if>
            <if test="hotelId !=null and hotelId != ''">
                and hotel_id = #{hotelId}
            </if>
            <if test="hrCompanyId !=null and hrCompanyId != ''">
                and hr_company_id = #{hrCompanyId}
            </if>
            <if test="applyType !=null and applyType != ''">
                and apply_type = #{applyType}
            </if>
        </where>
    </select>

	<select id="selectMessageDetails" parameterType="java.lang.String"
            resultType="java.util.Map">
		SELECT u.`username` AS username, CASE u.`sex` WHEN 'MALE'
		THEN '男' WHEN
		'FEMALE' THEN '女' ELSE '未知' END AS sex,
		u.mobile AS
		mobile, m.message_title AS message_title,m.supplement_time AS TIME,
		m.create_time AS startTime,m.content AS reason,
		t.from_date AS
		startTime, t.to_date AS endTime, t.day_start_time AS dayStartTime,
		t.day_end_time AS dayEndTime,t.need_workers needWorkers,
		t.confirmed_workers AS confirmedWorkers,t.task_content AS taskContent
		FROM (SELECT * FROM message WHERE id=#{id}) m
		INNER JOIN USER u
		ON
		m.worker_id = u.`id`
		INNER JOIN task t
		ON m.worker_task_id = t.id
	</select>
    <select id="selectPunchMessage" parameterType="java.lang.String"
            resultType="com.microdev.param.PunchMessageDTO">
        SELECT m.`supplement_time` AS supplement, wl.`from_date`
        AS
        fromDate, wl.`to_date` AS toDate,
        wl.id AS id, wl.punch_date AS
        punchDate, wl.task_id AS taskId,
        wl.task_worker_id AS taskWorkerId,
        th.id AS taskHrId
        FROM (SELECT * FROM message WHERE id= #{id}) m
        INNER
        JOIN work_log wl
        ON wl.`task_worker_id` = m.worker_id AND
        m.`worker_task_id` = wl.`task_id`
        INNER JOIN task_hr_company th
        ON
        th.hr_company_id = m.hr_company_id AND th.task_id = wl.task_id
    </select>
    <select id="selectHrCooperateInfo" parameterType="java.lang.String"
            resultType="com.microdev.param.HrApply">
        SELECT m.message_title AS messageTitle,
        DATE_FORMAT(m.create_time,'%Y-%m-%d %H:%m:%s') AS createTime,
        c.`name`  AS name, c.`leader` AS leader, c.`address` AS
        address,c.`leader_mobile` AS leaderMobile
        FROM (
        SELECT * FROM message
        WHERE id = #{id}
        ) m
        INNER JOIN company c
        ON m.hr_company_id = c.`id`
    </select>
    <select id="selectHotelWorkerApply" parameterType="java.util.Map"
            resultType="com.microdev.param.LeaveApply">
        SELECT m.message_title AS messageTitle,m.supplement_time
        AS
        supplementTime,
        m.supplement_time_end AS supplementTimeEnd,
        m.minutes
        AS
        minutes, m.create_time AS createTime, m.content AS
        reason, u.username AS
        username, CASE u.`sex` WHEN 'MALE'
        THEN '男' WHEN
        'FEMALE' THEN '女' ELSE '未知' END AS sex,
        u.birthday AS birthday,u.mobile AS mobile,
        t.task_type_text AS taskTypeText,
        t.hourly_pay AS hourlyPay,t.from_date
        AS fromDate,t.to_date AS toDate,
        t.day_start_time AS dayStartTime,
        t.day_end_time AS dayEndTime,
        t.need_workers AS needWorkers,
        t.confirmed_workers as confirmedWorkers,
        t.task_content AS
        taskContent,m.message_title AS messageTitle
        FROM
        (SELECT * FROM message
        WHERE id=#{messageId}) m
        INNER JOIN USER u
        ON m.worker_id = u.worker_id
        INNER JOIN
        (SELECT * FROM task WHERE id = #{taskId}) t
        ON t.hotel_id =
        m.hotel_id
    </select>

    <select id="selectHrWaitInfo" parameterType="java.lang.String"
            resultType="java.util.Map">
		SELECT m.message_title AS messageTitle,
		m.hr_company_id AS
		hrCompanyId, m.hotel_id AS hotelId,
		m.worker_task_id AS
		workerTaskId,m.message_code as messageCode
		m.worker_id AS workerId,
		h.fromDate AS fromDate, h.toDate AS toDate,
		h.dayStartTime AS
		dayStartTime,h.dayEndTime AS dayEndTime,
		h.hotelName AS
		hotelName,h.address AS address, h.needWorkers AS needWorkers,
		h.id AS taskId,
		h.confirmedWorkers AS confirmedWorkers
		FROM
		( SELECT * FROM
		message WHERE apply_type=2 AND STATUS=0 AND
		hr_company_id = #{hrCompanyId}) m
		LEFT JOIN
		(
		SELECT t.from_date AS fromDate, t.to_date
		AS toDate, t.day_start_time AS
		dayStartTime, t.day_end_time AS
		dayEndTime,
		t.hotel_name AS hotelName, c.address AS
		address,t.need_workers AS needWorkers,
		t.confirmed_workers AS
		confirmedWorkers,
		th.hotel_id AS hotelId, th.hr_company_id AS
		hrCompanyId,t.id AS id
		FROM task_hr_company th
		INNER JOIN task t ON
		th.`hotel_id` = t.`hotel_id`
		INNER JOIN company c
		ON c.id = t.hotel_id
		) h
		ON h.hotelId = m.hotel_id AND h.hrCompanyId = m.hr_company_id
	</select>

    <select id="selectHrDeployInfo" parameterType="java.util.Map"
            resultType="com.microdev.param.HrDeployApply">
        SELECT m.`content` AS reason,m.message_title AS
        messageTitle,DATE_FORMAT(m.create_time,'%Y-%m-%d %H:%m:%s') AS
        createTime,c.`name` AS NAME, c.`leader` AS leader, c.`address` AS
        address,c.`leader_mobile` AS leaderMobile,
        th.need_workers AS
        hNeedWorkers, th.confirmed_workers AS hConfirmedWorkers,
        th.need_workers - th.confirmed_workers AS hLackWorkers,th.task_id AS
        taskId
        FROM
        (SELECT *
        FROM message WHERE id = #{id}) m
        INNER JOIN company c
        ON m.hr_company_id = c.`id`
        INNER JOIN
        (SELECT * FROM task_hr_company
        WHERE task_id = #{taskId}) th
        ON th.hr_company_id = m.hr_company_id
    </select>
    <insert id="saveBatch" parameterType="java.util.List">
        insert into message(id,create_time,deleted,modify_time,message_type,status,
        worker_task_id, worker_id, message_code, message_title,message_content,content,minutes,    supplement_time_end,supplement_time ,request_id, hotel_id, hr_company_id, applicant_type,apply_type,message_link,msg_link, check_sign,is_handle,task_id) values
        <foreach collection="list" item="item" separator=",">
            (#{item.pid},#{item.createTime},#{item.deleted},#{item.modifyTime},#{item.messageType},#{item.status},
            #{item.workerTaskId},#{item.workerId},#{item.messageCode},#{item.messageTitle},#{item.messageContent}
            ,#{item.content},#{item.minutes},#{item.supplementTimeEnd},#{item.supplementTime},
            #{item.requestId},#{item.hotelId},#{item.hrCompanyId},#{item.applicantType},#{item.applyType},#{item.messageLink}, #{item.msgLink}, #{item.checkSign}, #{item.isHandle}, #{item.taskId})
        </foreach>
    </insert>
    <select id="selectAllMessage" parameterType="java.util.Map" resultType="com.microdev.param.MessageResponse">
        SELECT
        message_title AS messageTitle,CASE WHEN
        DATE_FORMAT(create_time,'%Y-%m-%d') = CURDATE() THEN '今天' WHEN
        DATE_FORMAT(create_time,'%Y-%m-%d') = DATE_SUB(CURDATE(), INTERVAL 1
        DAY) THEN '昨天' ELSE DATE_FORMAT(create_time,'%m-%d') END AS
        days,message_content AS messageContent, id
        FROM message
        <where>
            <if test="workerId != null">
                and worker_id = #{workerId}
            </if>
            <if test="hotelId != null">
                and hotel_id = #{hotelId}
            </if>
            <if test="hrCompanyId != null">
                and hr_company_id = #{hrCompanyId}
            </if>
        </where>
        ORDER BY STATUS ASC ,create_time DESC
    </select>

    <select id="selectUnReadMessage" resultType="com.microdev.model.Message" parameterType="java.util.Map">
        SELECT CASE message_type WHEN 1 THEN '补签申请' WHEN 2 THEN '加时申请' WHEN 3 THEN '请假申请'
        WHEN 4 THEN '调配申请' WHEN 5 THEN '绑定申请' WHEN 6 THEN '任务推荐' END AS messageCode,create_time,message_content FROM message
        WHERE STATUS = 0 AND deleted = 0
        <if test="workerId != null">
            and worker_id = #{workerId}
        </if>
        <if test="hotelId != null">
            and hotel_id = #{hotelId}
        </if>
        <if test="hrCompanyId != null">
            and hr_company_id = #{hrCompanyId}
        </if>
        <if test="applyType != null">
            <if test="applyType == 1 ">
                and apply_type in (0, 1)
            </if>
            <if test="applyType != 1 ">
                and apply_type = #{applyType}
            </if>
        </if>
        <if test="checkSign != null">
            and check_sign = #{checkSign}
        </if>
    </select>

    <select id="selectUnReadCount" parameterType="java.util.Map" resultType="java.lang.Integer">
      SELECT COUNT(1) FROM message WHERE deleted = 0
        <if test="status != null">
            and status = #{status}
        </if>
        <if test="workerId != null">
            and worker_id = #{workerId}
        </if>
        <if test="hotelId != null">
            and hotel_id = #{hotelId}
        </if>
        <if test="hrCompanyId != null">
            and hr_company_id = #{hrCompanyId}
        </if>
        <if test="applyType != null">
            <if test="applyType == 1 ">
                and apply_type in (0, 1)
            </if>
            <if test="applyType != 1 ">
                and apply_type = #{applyType}
            </if>
        </if>
      <if test="messageCode != null">
        and message_code = #{messageCode}
      </if>
      <if test="applicantType != null">
        and applicant_type = #{applicantType}
      </if>
      <if test="checkSign != null">
          and check_sign = #{checkSign}
      </if>
      <if test="messageType != null">
          and message_type = #{messageType}
      </if>
        <if test="isHandle != null">
          and is_handle = #{isHandle}
        </if>
    </select>

    <select id = "selectByParam" parameterType="java.util.Map" resultType="com.microdev.model.Message">
        select message_code, message_content, message_link, message_title, msg_link, content from
        message
        <where>
            <if test="workerId != null">
                and worker_id = #{workerId}
            </if>
            <if test="hotelId != null">
                and hotel_id = #{hotelId}
            </if>
            <if test="hrCompanyId != null">
                and hr_company_id = #{hrCompanyId}
            </if>
            <if test="applicantType != null">
                and applicant_type = #{applicantType}
            </if>
            <if test="applyType != null">
                and apply_type = #{applyType}
            </if>
            order by check_sign asc, create_time desc
        </where>
    </select>

    <select id = "selectWorkerUnbindMessage" resultType="com.microdev.model.Message">
      SELECT <include refid="Message_Column_List"/> FROM message WHERE message_code = 'MaxUnbindDay' AND applicant_type=1 AND apply_type = 2 AND STATUS = 0
    </select>

    <select id="selectWorkerAwaitHandleInfo" resultType="com.microdev.param.AwaitHandleInfo">
        SELECT m.content,m.id AS messageId,m.create_time,c.address,c.logo,t.*, message_type  AS TYPE FROM message m
INNER JOIN
(
	SELECT task_type_text,from_date,to_date,day_start_time,day_end_time,hotel_name,confirmed_workers,need_workers,IFNULL(need_workers,0)-IFNULL(confirmed_workers,0) AS lackWorkers,hotel_id,id FROM task
) t
ON m.task_id = t.id
INNER JOIN company c
ON c.id = t.hotel_id
WHERE m.apply_type=1 AND m.is_task = 0 AND worker_id= #{workerId}

UNION

(
 SELECT m2.content,m2.id AS messageId,m2.`create_time`,c2.address,c2.logo,NULL AS task_type_text,NULL AS from_date, NULL AS to_date,NULL AS day_start_time,NULL AS day_end_time, NULL AS hotel_name, 0 AS confirmed_workers,0 AS need_workers,
  0 AS lackWorkers,NULL AS hotel_id, NULL AS id, 5 AS TYPE
 FROM message m2
 INNER JOIN company c2 ON m2.hotel_id = c2.id
 WHERE m2.apply_type=1 AND m2.is_task = 1 AND worker_id= #{workerId}
)
ORDER BY create_time

    </select>

    <select id = "selectHrAwaitHandleInfo" resultType="com.microdev.param.AwaitHandleInfo">
      SELECT m.content,m.id AS messageId,m.create_time,c.address,c.logo,t.*,message_type AS TYPE  FROM message m
INNER JOIN
(
SELECT task_type_text,from_date,to_date,day_start_time,day_end_time,hotel_name,confirmed_workers,need_workers,IFNULL(need_workers,0)-IFNULL(confirmed_workers,0) AS lackWorkers,hotel_id,id FROM task
) t
ON m.task_id = t.id
INNER JOIN company c
ON c.id = t.hotel_id
WHERE m.apply_type=2 AND m.is_task = 0 AND hr_company_id= #{hrId}

UNION

(
SELECT m2.content,m2.id AS messageId,m2.`create_time`,NULL AS address,u.avatar AS logo,NULL AS task_type_text,NULL AS from_date, NULL AS to_date,NULL AS day_start_time,NULL AS day_end_time, NULL AS hotel_name, 0 AS confirmed_workers,0 AS need_workers,
  0 AS lackWorkers,NULL AS hotel_id, NULL AS id, message_type AS TYPE FROM message m2
  INNER JOIN USER u
  ON u.`worker_id` = m2.`worker_id`
  WHERE m2.apply_type=2 AND m2.is_task = 1 AND m2.hr_company_id= #{hrId}
)

UNION
(
SELECT m3.content,m3.id AS messageId,m3.`create_time`,NULL AS address,c3.`logo`,NULL AS task_type_text,NULL AS from_date, NULL AS to_date,NULL AS day_start_time,NULL AS day_end_time, NULL AS hotel_name, 0 AS confirmed_workers,0 AS need_workers,
  0 AS lackWorkers,NULL AS hotel_id, NULL AS id, message_type AS TYPE FROM message m3
  INNER JOIN company c3
  ON c3.id = m3.`hotel_id`
  WHERE m3.apply_type=2 AND m3.is_task = 1 AND m3.hr_company_id= #{hrId}
)
ORDER BY create_time
    </select>

    <select id="selectHotelAwaitHandleInfo" resultType="com.microdev.param.AwaitHandleInfo">
        SELECT m.content,m.id AS messageId,m.create_time,c.address,c.logo,t.*,message_type AS TYPE  FROM message m
INNER JOIN
(
SELECT task_type_text,from_date,to_date,day_start_time,day_end_time,hotel_name,confirmed_workers,need_workers,IFNULL(need_workers,0)-IFNULL(confirmed_workers,0) AS lackWorkers,hotel_id,id FROM task
) t
ON m.task_id = t.id
INNER JOIN company c
ON c.id = t.hotel_id
WHERE m.apply_type=2 AND m.is_task = 0 AND m.hotel_id= #{hotelId}

UNION

(
SELECT m3.content,m3.id AS messageId,m3.`create_time`,NULL AS address,c3.`logo`,NULL AS task_type_text,NULL AS from_date, NULL AS to_date,NULL AS day_start_time,NULL AS day_end_time, NULL AS hotel_name, 0 AS confirmed_workers,0 AS need_workers,
  0 AS lackWorkers,NULL AS hotel_id, NULL AS id, message_type AS TYPE FROM message m3
  INNER JOIN company c3
  ON c3.id = m3.`hotel_id`
  WHERE m3.apply_type=2 AND m3.is_task = 1 AND m3.hotel_id= #{hotelId}
)
    </select>
</mapper>